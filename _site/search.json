[
  {
    "objectID": "sandbox/ags_data_dict_from_pdf_to_json.html",
    "href": "sandbox/ags_data_dict_from_pdf_to_json.html",
    "title": "Bedrock",
    "section": "",
    "text": "Code\nimport json\nimport os\n\nimport pandas as pd\nimport pdfplumber\n\nos.getcwd()\n\n\n'c:\\\\Users\\\\joost\\\\ReposWindows\\\\bedrock-web\\\\sandbox'\n\n\n\n\nCode\ndf1 = pd.read_csv('ags3_groups_and_headings.tsv', sep='\\t')\ndf2 = pd.read_csv('ags3_groups_and_headings2.tsv', sep='\\t')\n\nif df1.equals(df2):\n    print(\"The files are identical.\")\nelse:\n    print(\"The files are different.\")\n    print(df1.compare(df2))\n\n\nThe files are different.\n\n\n\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n~\\AppData\\Local\\Temp\\ipykernel_6192\\2176789508.py in ?()\n      4 if df1.equals(df2):\n      5     print(\"The files are identical.\")\n      6 else:\n      7     print(\"The files are different.\")\n----&gt; 8     print(df1.compare(df2))\n\nc:\\Users\\joost\\ReposWindows\\bedrock-web\\.venv\\Lib\\site-packages\\pandas\\core\\frame.py in ?(self, other, align_axis, keep_shape, keep_equal, result_names)\n   8589         keep_shape: bool = False,\n   8590         keep_equal: bool = False,\n   8591         result_names: Suffixes = (\"self\", \"other\"),\n   8592     ) -&gt; DataFrame:\n-&gt; 8593         return super().compare(\n   8594             other=other,\n   8595             align_axis=align_axis,\n   8596             keep_shape=keep_shape,\n\nc:\\Users\\joost\\ReposWindows\\bedrock-web\\.venv\\Lib\\site-packages\\pandas\\core\\generic.py in ?(self, other, align_axis, keep_shape, keep_equal, result_names)\n  10117             raise TypeError(\n  10118                 f\"can only compare '{cls_self}' (not '{cls_other}') with '{cls_self}'\"\n  10119             )\n  10120 \n&gt; 10121         mask = ~((self == other) | (self.isna() & other.isna()))\n  10122         mask.fillna(True, inplace=True)\n  10123 \n  10124         if not keep_equal:\n\nc:\\Users\\joost\\ReposWindows\\bedrock-web\\.venv\\Lib\\site-packages\\pandas\\core\\ops\\common.py in ?(self, other)\n     72                     return NotImplemented\n     73 \n     74         other = item_from_zerodim(other)\n     75 \n---&gt; 76         return method(self, other)\n\nc:\\Users\\joost\\ReposWindows\\bedrock-web\\.venv\\Lib\\site-packages\\pandas\\core\\arraylike.py in ?(self, other)\n     38     @unpack_zerodim_and_defer(\"__eq__\")\n     39     def __eq__(self, other):\n---&gt; 40         return self._cmp_method(other, operator.eq)\n\nc:\\Users\\joost\\ReposWindows\\bedrock-web\\.venv\\Lib\\site-packages\\pandas\\core\\frame.py in ?(self, other, op)\n   7894     def _cmp_method(self, other, op):\n   7895         axis: Literal[1] = 1  # only relevant for Series other case\n   7896 \n-&gt; 7897         self, other = self._align_for_op(other, axis, flex=False, level=None)\n   7898 \n   7899         # See GH#4537 for discussion of scalar op behavior\n   7900         new_data = self._dispatch_frame_op(other, op, axis=axis)\n\nc:\\Users\\joost\\ReposWindows\\bedrock-web\\.venv\\Lib\\site-packages\\pandas\\core\\frame.py in ?(self, other, axis, flex, level)\n   8192                     left, right = left.align(\n   8193                         right, join=\"outer\", level=level, copy=False\n   8194                     )\n   8195                 else:\n-&gt; 8196                     raise ValueError(\n   8197                         \"Can only compare identically-labeled (both index and columns) \"\n   8198                         \"DataFrame objects\"\n   8199                     )\n\nValueError: Can only compare identically-labeled (both index and columns) DataFrame objects\n\n\n\n\n\nCode\ndf1\n\n\n\n\n\n\n\n\n\ngroup_name\ncontents\nparent_group\n\n\n\n\n0\nABBR\nAbbreviation Definitions\n-\n\n\n1\nBKFL\nBackfill Details\nHOLE\n\n\n2\nCBRG\nCBR Test - General\nSAMP\n\n\n3\nCBRT\nCBR Test\nCBRG\n\n\n4\nCDIA\nCasing Diameter by Depth\nHOLE\n\n\n...\n...\n...\n...\n\n\n69\nTRIG\nTriaxial Test - General\nSAMP\n\n\n70\nTRIX\nTriaxial Test\nTRIG\n\n\n71\nUNIT\nDefinition of &lt;UNITS&gt; and CNMT_UNIT\n-\n\n\n72\nWETH\nWeathering Grades\nHOLE\n\n\n73\nWSTK\nWater Strike Details\nHOLE\n\n\n\n\n74 rows × 3 columns\n\n\n\n\n\nCode\ndf2\n\n\n\n\n\n\n\n\n\ngroup_name\ncontents\nparent_group\n\n\n\n\n0\nABBR\nAbbreviation Definitions\n-\n\n\n1\nBKFL\nBackfill Details\nHOLE\n\n\n2\nCBRG\nCBR Test - General\nSAMP\n\n\n3\nCBRT\nCBR Test\nCBRG\n\n\n4\nCDIA\nCasing Diameter by Depth\nHOLE\n\n\n...\n...\n...\n...\n\n\n70\nTRIG\nTriaxial Test - General\nSAMP\n\n\n71\nTRIX\nTriaxial Test\nTRIG\n\n\n72\nUNIT\nDefinition of Units\n-\n\n\n73\nWETH\nWeathering Grades\nHOLE\n\n\n74\nWSTK\nWater Strike Details\nHOLE\n\n\n\n\n75 rows × 3 columns\n\n\n\n\n\nCode\ndf1.compare(df2)\n\n\n\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n~\\AppData\\Local\\Temp\\ipykernel_6192\\871738017.py in ?()\n----&gt; 1 df1.compare(df2)\n\nc:\\Users\\joost\\ReposWindows\\bedrock-web\\.venv\\Lib\\site-packages\\pandas\\core\\frame.py in ?(self, other, align_axis, keep_shape, keep_equal, result_names)\n   8589         keep_shape: bool = False,\n   8590         keep_equal: bool = False,\n   8591         result_names: Suffixes = (\"self\", \"other\"),\n   8592     ) -&gt; DataFrame:\n-&gt; 8593         return super().compare(\n   8594             other=other,\n   8595             align_axis=align_axis,\n   8596             keep_shape=keep_shape,\n\nc:\\Users\\joost\\ReposWindows\\bedrock-web\\.venv\\Lib\\site-packages\\pandas\\core\\generic.py in ?(self, other, align_axis, keep_shape, keep_equal, result_names)\n  10117             raise TypeError(\n  10118                 f\"can only compare '{cls_self}' (not '{cls_other}') with '{cls_self}'\"\n  10119             )\n  10120 \n&gt; 10121         mask = ~((self == other) | (self.isna() & other.isna()))\n  10122         mask.fillna(True, inplace=True)\n  10123 \n  10124         if not keep_equal:\n\nc:\\Users\\joost\\ReposWindows\\bedrock-web\\.venv\\Lib\\site-packages\\pandas\\core\\ops\\common.py in ?(self, other)\n     72                     return NotImplemented\n     73 \n     74         other = item_from_zerodim(other)\n     75 \n---&gt; 76         return method(self, other)\n\nc:\\Users\\joost\\ReposWindows\\bedrock-web\\.venv\\Lib\\site-packages\\pandas\\core\\arraylike.py in ?(self, other)\n     38     @unpack_zerodim_and_defer(\"__eq__\")\n     39     def __eq__(self, other):\n---&gt; 40         return self._cmp_method(other, operator.eq)\n\nc:\\Users\\joost\\ReposWindows\\bedrock-web\\.venv\\Lib\\site-packages\\pandas\\core\\frame.py in ?(self, other, op)\n   7894     def _cmp_method(self, other, op):\n   7895         axis: Literal[1] = 1  # only relevant for Series other case\n   7896 \n-&gt; 7897         self, other = self._align_for_op(other, axis, flex=False, level=None)\n   7898 \n   7899         # See GH#4537 for discussion of scalar op behavior\n   7900         new_data = self._dispatch_frame_op(other, op, axis=axis)\n\nc:\\Users\\joost\\ReposWindows\\bedrock-web\\.venv\\Lib\\site-packages\\pandas\\core\\frame.py in ?(self, other, axis, flex, level)\n   8192                     left, right = left.align(\n   8193                         right, join=\"outer\", level=level, copy=False\n   8194                     )\n   8195                 else:\n-&gt; 8196                     raise ValueError(\n   8197                         \"Can only compare identically-labeled (both index and columns) \"\n   8198                         \"DataFrame objects\"\n   8199                     )\n\nValueError: Can only compare identically-labeled (both index and columns) DataFrame objects\n\n\n\n\n\nCode\n# Concatenate the two DataFrames\ndf_concat = pd.concat([df1, df2])\n\n# Find the duplicate rows\nduplicates = df_concat.duplicated(keep=False)\n\n# Find the rows that are not duplicates (i.e., the rows that are unique to one DataFrame)\nunique_rows = df_concat[~duplicates]\n\n\n\n\nCode\nunique_rows\n\n\n\n\n\n\n\n\n\ngroup_name\ncontents\nparent_group\n\n\n\n\n32\nHPGI\nHorizontal Profile Gauge Installation Details\nHOLE\n\n\n37\nIFID\nOn Site Volatile Headspace Testing Using Flame...\nHOLE\n\n\n38\nINST\nSingle Point Instrument Installation Details\nHOLE\n\n\n71\nUNIT\nDefinition of &lt;UNITS&gt; and CNMT_UNIT\n-\n\n\n32\nHPGI\nHorizontal Profile Gauge Installation\nHOLE\n\n\n37\nIFID\nOn Site Volatile Headspace Testing (FID)\nHOLE\n\n\n38\nINST\nSingle Point Instrument Installation\nHOLE\n\n\n40\nIPID\nOn Site Volatile Headspace Testing (PID)\nHOLE\n\n\n72\nUNIT\nDefinition of Units\n-\n\n\n\n\n\n\n\n\n\nCode\ndef extract_ags3_data_dict_table(table):\n    headings = []\n    for row in table[2:]:  # Skip first 2 rows: 1st = title, 2nd = headings\n        headings.append(\n            {\n                \"status\": None if row[0] == \"\" else row[0].strip(),\n                \"heading\": row[1].strip(),\n                \"unit\": None if row[2] == \"\" else row[2].strip().replace(\"\\n\", \" \"),\n                \"description\": row[3].strip().replace(\"\\n\", \" \"),\n                \"example\": None if row[4] == \"\" else row[4].strip().replace(\"\\n\", \" \"),\n            }\n        )\n    return headings\n\n\ndef extract_ags4_data_dict_table(table):\n    # Skip rows that don't contain data\n    for i, row in enumerate(table):\n        if \"Suggested\\nUnit / Type\" in row or \"Unit / Type\" in row:\n            first_data_row = i + 1\n            break\n\n    headings = []\n    for row in table[first_data_row:]:\n        row = [x for x in row if x is not None]\n        headings.append(\n            {\n                \"status\": None if row[0] == \"\" else row[0].strip(),\n                \"heading\": row[1].strip(),\n                \"unit\": None if row[2] == \"\" else row[2].strip().replace(\"\\n\", \"\"),\n                \"type\": row[3].strip(),\n                \"description\": row[4].strip().replace(\"\\n\", \" \"),\n                \"example\": None if row[5] == \"\" else row[5].strip().replace(\"\\n\", \" \"),\n            }\n        )\n    return headings\n\n\n\n\nCode\nags_version = 3  # AGS version 3 or 4\npdf_dict = {\n    3: {\"pdf_file\": \"AGS3_v3-1-2005.pdf\", \"from_page\": 22, \"to_page\": 68},\n    4: {\"pdf_file\": \"AGS4-v4-1-1-2022.pdf\", \"from_page\": 18, \"to_page\": 159},\n}\n\n\n\n\nCode\npdf_file, from_page, to_page = pdf_dict[ags_version].values()\n\n# List to store extracted data for each group\nextracted_data = []\nprevious_group_name = \"\"\nwith pdfplumber.open(pdf_file) as pdf:\n    # Adjust the page range based on where the tables are located\n    for page_number in range(from_page, to_page):\n        page = pdf.pages[page_number - 1]  # pdfplumber is 0-based, so subtract 1\n        tables_on_current_page = page.extract_tables()  # Extract tables from the page\n\n        # Iterate through all tables found on the page\n        for table in tables_on_current_page:\n            if ags_version == 3:\n                table_title = table[0][0].strip()  # Get table title from AGS3\n            elif ags_version == 4:\n                table_title = table[0][1].strip()  # Get table title from AGS4\n            print(table_title)\n\n            parts = table_title.split(\": \", 1)  # Split on the first occurrence of ': '\n            if \"Group Name\" in parts[0]:\n                group_name = parts[1].split(\" - \")[0]\n                group_description = \" - \".join(parts[1].split(\" - \")[1:])\n                group_description = group_description.replace(\"\\n\", \" \")\n                if ags_version == 3:\n                    headings = extract_ags3_data_dict_table(table)\n                elif ags_version == 4:\n                    headings = extract_ags4_data_dict_table(table)\n\n                if group_name == previous_group_name:\n                    extracted_data[-1][\"headings\"].extend(headings)\n                else:\n                    extracted_data.append(\n                        {\n                            \"group_name\": group_name,\n                            \"group_description\": group_description,\n                            \"headings\": headings,\n                        }\n                    )\n                previous_group_name = group_name\n\n\nGroup Name : PROJ - Project Information\nGroup Name : ABBR - Abbreviation Definitions\nGroup Name : ?BKFL - Backfill Details\nGroup Name : CBRG - CBR Test – General\nGroup Name : CBRT - CBR Test\nGroup Name : CDIA - Casing Diameter by Depth\nGroup Name : CHEM - Chemical Tests\nN.B. Provision for reporting of this data is included in groups CNMT and ?ICCT. These groups should be used as\nappropriate in preference.\nGroup CHEM will be deleted from future editions.\nGroup Name : CHIS - Chiselling Details\nGroup Name : CHLK - Chalk Tests\nGroup Name : CLSS - Classification Tests\nGroup Name : CMPG - Compaction Tests - General\nGroup Name : CMPT - Compaction Tests\nGroup Name : CNMT - Contaminant and Chemical Testing\nNB. in situ measurement and monitoring of contamination and chemicals shoud be recorded in Group ?ICCT\nGroup Name : CODE - Chemical Testing Codes\nGroup Name : CONG - Consolidation Test - General\nGroup Name : CONS - Consolidation Test\nGroup Name : CORE - Rotary Core Information\nGroup Name : DETL - Stratum Detail Descriptions\nGroup Name : DICT - User Defined Groups and Headings\nGroup Name : DISC - Discontinuity Data\nGroup Name : DPRB - Dynamic Probe Test\nNB. The type of probe should be recorded in the Group DPRG\nGroup Name : DPRG - Dynamic Probe Test - General\nGroup Name : DREM - Depth Related Remarks\nGroup Name : FILE - Associated Files\nGroup Name : FLSH - Rotary Core Flush Details\nGroup Name : FRAC - Fracture Spacing\nGroup Name : FRST - Frost Susceptibility\nGroup Name : GAST - Gas Constituents\nN.B. Provision for reporting of this data is included in groups CNMT and ?ICCT. These groups should be used as\nappropriate in preference.\nGroup GAST will be deleted from future editions\nGroup Name : GEOL - Stratum Descriptions\nGroup Name : GRAD - Particle Size Distribution Analysis Data\nGroup Name : HDIA - Hole Diameter by Depth\nNB. Casing information should be recorded in the CDIA group\nGroup Name : ?HDPH - Depth Related Hole Information\nGroup Name : HOLE - Hole Or Location Equivalent\nGroup Name : HPGI - Horizontal Profile Gauge Installation Details\nN.B. Provision for reporting of this data is included in group ?MONP, group ?MONP should be used in preference.\nGroup HPGI will be marked for deletion in the next edition.\nGroup Name : HPGO - Horizontal Profile Gauge Observations\nN.B. Provision for reporting of this data is included in group ?MONR, group ?MONR should be used in preference.\nGroup HPGO will be marked for deletion in the next edition.\nGroup Name : ICBR - In Situ CBR Test\nGroup Name : ?ICCT - In Situ Contaminant and Chemical Testing\nGroup Name : IDEN - In Situ Density Test\nGroup Name : ?IFID - On Site Volatile Headspace Testing Using Flame Ionisation Detector\nGroup Name : INST - Single Point Instrument Installation Details\nN.B. Provision for reporting of this data is included in group ?MONP, group ?MONP should be used in preference.\nGroup INST will be marked for deletion in the next edition.\nGroup Name : IOBS - Single Point Instrument Readings\nN.B. Provision for reporting of this data is included in group ?MONR, group ?MONR should be used in preference.\nGroup IOBS will be marked for deletion in the next edition.\nGroup Name : ?IPID - On Site Volatile Headspace Testing by Photo Ionisation Detector\nGroup Name : IPRM - In Situ Permeability Test\nGroup Name : IRDX - In Situ Redox Test\nGroup Name : IRES - In Situ Resistivity Test\nGroup Name : ISPT - Standard Penetration Test Results\nGroup Name : IVAN - In Situ Vane Test\nGroup Name : MCVG - MCV Test - General\nGroup Name : MCVT - MCV Test\nGroup Name : ?MONP - Monitor Point\nGroup Name : ?MONR - Monitor Point Reading\nGroup Name : POBS - Piezometer Readings\nN.B. Provision for reporting of this data is included in group ?MONR, group ?MONR should be used in preference.\nGroup POBS will be marked for deletion in the next edition.\nGroup Name : PREF - Piezometer Installation Details\nN.B. Provision for reporting of this data is included in group ?MONP, group ?MONP should be used in preference.\nGroup PREF will be marked for deletion in the next edition.\nGroup Name : PROB - Profiling Instrument Readings\nN.B. Provision for reporting of this data is included in group ?MONR, group ?MONR should be used in preference.\nGroup PROB will be marked for deletion in the next edition.\nGroup Name : PROF - Profiling Instrument Installation Details\nN.B. Provision for reporting of this data is included in group ?MONP, group ?MONP should be used in preference.\nGroup PROF will be marked for deletion in the next edition.\nGroup Name : PRTD - Pressuremeter Test Data\nGroup Name : PRTG - Pressuremeter Test Results, General\nGroup Name : PRTL - Pressuremeter Test Results, Individual Loops\nGroup Name : PTIM - Hole Progress by Time\nGroup Name : PTST - Laboratory Permeability Tests\nGroup Name : PUMP - Pumping Test\nGroup Name: RELD - Relative Density Test\nGroup Name : ROCK - Rock Testing\nGroup Name : ROCK - Rock Testing\nGroup Name : SAMP - Sample Reference Information\nGroup Name : SHBG - Shear Box Testing - General\nGroup Name : SHBT - Shear Box Testing\nGroup Name : STCN - Static Cone Penetration Test\nGroup Name : SUCT - Suction Tests\nGroup Name : TNPC - Ten Per Cent Fines\nGroup Name : ?TREM - Time Related Remarks\nGroup Name : TRIG - Triaxial Test - General\nGroup Name : TRIX - Triaxial Test\nGroup Name : UNIT - Definition of &lt;UNITS&gt; and CNMT_UNIT\n\n\n\n\nCode\n# Save the extracted data to a JSON file\nwith open(f\"ags{ags_version}_data_dict_p{from_page}-{to_page}.json\", \"w\") as json_file:\n    json.dump(extracted_data, json_file, indent=2)\n\n\n\n\nCode\nf\"The number of groups in the AGS{ags_version} data dictionary is {len(extracted_data)}\"\n\n\n'The number of groups in the AGS3 data dictionary is 73'\n\n\n\n\nCode\nextracted_data\n\n\n[{'group_name': 'RELD',\n  'group_description': 'Relative Density Test',\n  'headings': [{'status': '*',\n    'heading': 'HOLE_ID',\n    'unit': None,\n    'description': 'Exploratory hole or location equivalent',\n    'example': '6431/A'},\n   {'status': '*',\n    'heading': 'SAMP_TOP',\n    'unit': 'm',\n    'description': 'Depth to TOP of test sample',\n    'example': '8.50'},\n   {'status': '*',\n    'heading': 'SAMP_REF',\n    'unit': None,\n    'description': 'Sample reference number',\n    'example': '16'},\n   {'status': '*',\n    'heading': 'SAMP_TYPE',\n    'unit': None,\n    'description': 'Sample type',\n    'example': 'LB (See Appendix 1)'},\n   {'status': '*',\n    'heading': 'SPEC_REF',\n    'unit': None,\n    'description': 'Specimen reference number',\n    'example': '2'},\n   {'status': '*',\n    'heading': 'SPEC_DPTH',\n    'unit': 'm',\n    'description': 'Specimen depth',\n    'example': '8.50'},\n   {'status': None,\n    'heading': 'RELD_REM',\n    'unit': None,\n    'description': 'Method of test',\n    'example': None},\n   {'status': None,\n    'heading': 'RELD_DMAX',\n    'unit': 'Mg/m3',\n    'description': 'Maximum dry density as BS 1377 part 4 cl 4',\n    'example': '2.15'},\n   {'status': None,\n    'heading': 'RELD_375',\n    'unit': '%',\n    'description': 'Weight percent of sample retained on 37.5mm sieve',\n    'example': '7.0'},\n   {'status': None,\n    'heading': 'RELD_Ø63',\n    'unit': '%',\n    'description': 'Weight percent of sample retained on 6.3mm sieve',\n    'example': '10'},\n   {'status': None,\n    'heading': 'RELD_Ø2Ø',\n    'unit': '%',\n    'description': 'Weight percent of sample retained on 2mm sieve',\n    'example': '5.0'},\n   {'status': None,\n    'heading': 'RELD_DMIN',\n    'unit': 'Mg/m3',\n    'description': 'Minimum dry density as BS 1377 part 4 cl 4',\n    'example': '1.65'}]}]"
  },
  {
    "objectID": "faq.html",
    "href": "faq.html",
    "title": "FAQ",
    "section": "",
    "text": "Under Construction 🏗️\n\n\n\nThis page of Bedrock’s website is still under construction. The content below comes from Quarto’s FAQ page. Most links on this page are broken.\n\n\n\nWhat can I use Quarto for?\nQuarto® is an open source scientific and technical publishing system built on Pandoc. You can weave together narrative text and code to produce elegantly formatted output as documents, web pages, blog posts, books and more.\n\n\nHow do I install Quarto?\nVisit the Quarto.org - Get Started page, which provides installation instructions for Windows, Mac OS, and Linux.\n\n\nIs Quarto free to use?\nYes! Quarto is open source. Quarto version 1.3 (and earlier) is licensed under the GNU GPL v2. Quarto version 1.4 is licensed under the MIT License.\n\n\nWhat output formats can Quarto create?\nThere are many output formats available in Quarto. This includes all of the built in Pandoc formats (e.g. HTML, PDF, MS Word, Revealjs, ePub, etc.) as well as various ways to publish multiple documents (websites, blogs, and books). Learn more at Quarto Formats. \n\n\nWhat editing tools can I use with Quarto?\nYou can use a wide variety of tools with Quarto. We have provided documentation for writing and editing Quarto documents in VSCode, JupyterLab, RStudio IDE, or any text editor. Visit the Get Started with Quarto page to install, and then choose your tool for a brief introductory guide.\n\n\nCan I use Jupyter notebooks with Quarto?\nYes! Quarto can render Jupyter notebooks and you can use Jupyter, JupyterLab or any other .ipynb notebook editor with Quarto. You can render existing .ipynb notebooks as-is with Quarto, but adding Quarto-specific output options or a YAML header can enhance the output. Visit theJupyterLab page for more information.\n\n\nWhat programming languages are supported in Quarto?\nThe principal languages supported by Quarto are Python, R, Julia, and Observable JavaScript. Integration with Jupyter also enables the use of many other languages. \nEach Quarto document can be optionally processed by a computational engine (the engine can be manually specified or automatically detected based on the code chunks within). Current engines include Knitr (which is also used by R Markdown and supports a variety of languages including R, Python, and Julia, etc.) and Jupyter (which supports many languages including Python, Julia, and R). See the documentation on Engine Binding for additional details.\n\n\nWhat human languages are supported in Quarto?\nYou can write your Quarto documentation in your human language of choice. The lang document option is used to identify the main language of the document using IETF language tags (following the BCP 47 standard), such as en or en-GB. \n\n\nCan I use Quarto to develop proprietary content?\nYes! The copyright on Quarto does not cover the original content that you generate using Quarto. Using Quarto to create original content does not place any restrictions, legally, on the license that you choose for the original content that you create, nor does it “reach through” to affect software that you might be writing documentation for with Quarto.\n\n\nBut doesn’t the GPL cover exported HTML documents when they include styles or functionalities from Quarto?\nIt covers the styles or functionalities themselves. It does not cover your original content because your original content is not a derivative work of the Quarto styles or functionalities.\n\n\nHow can I share documents and have people comment on them?\nYou can publish Quarto content to various locations. See the user guides for publishing for details on using Quarto Pub, GitHub Pages, Netlify, Posit Connect, and other services with Quarto. Once documents are published you can use  hypothes.is, Utterances, or Giscus for commenting. Learn more in the documentation on commenting.\n\n\nCan I do collaborative editing with Quarto?\nThere is not yet anything specific for collaborative editing in Quarto. You can collaborate on .qmd files in the same way you currently do for any text or code files. \nPosit Workbench allows for Project Sharing for interactive editing and collaboration on the same document.\n\n\nWhere can I publish Quarto websites?\nThere are a wide variety of ways to publish Quarto websites. Website content is by default written to the \\_site sub-directory (you can customize this using the output-dir option). Publishing is simply a matter of copying the output directory to a web server or web hosting service.\nThe publishing documentation describes several convenient options for Quarto website deployment including Posit Connect, Netlify, GitHub Pages, Firebase, Site44, and Amazon S3. We’ll mostly defer to the documentation provided by those various services, but will note any Quarto website specific configuration required.\n\n\nDoes Posit Connect support Quarto?\nYes! You can publish Quarto content to Posit Connect v2021.08.0 or later. Quarto has to be enabled as documented in the Posit Connect admin guide. Connect’s user documentation refers to Quarto.org docs on how to publish from the RStudio IDE. To publish Python-based Quarto content, you can use the rsconnect-python CLI from various locations, including VSCode, JupyterLab or the terminal.\n\n\nWho are the developers of Quarto?\nDevelopment of Quarto is sponsored by Posit, PBC. The same core team works on both Quarto and R Markdown:\n\nCarlos Scheidegger (@cscheid)\nCharles Teague (@dragonstyle)\nChristophe Dervieux (@cderv)\nJ.J. Allaire (@jjallaire)\nYihui Xie (@yihui)\n\nHere is the full contributors list. Quarto is open source and we welcome contributions in our github repository as well! https://github.com/quarto-dev/quarto-cli.\n\n\nWhy the name Quarto?\nWe wanted to use a name that had meaning in the history of publishing and landed on Quarto, which is the format of a book or pamphlet produced from full sheets printed with eight pages of text, four to a side, then folded twice to produce four leaves. The earliest known European printed book is a Quarto, the Sibyllenbuch, believed to have been printed by Johannes Gutenberg in 1452–53.\n\n\nWhere can I report bugs or request features?\nThanks for finding something and sharing with us! You can file an issue in the Quarto repository https://github.com/quarto-dev/quarto-cli/issues.\n\n\nWhere can I ask questions and discuss using Quarto with others?\nThe best place to ask questions and see what questions other people have is in Quarto discussions (https://github.com/quarto-dev/quarto-cli/discussions)."
  },
  {
    "objectID": "docs/index.html",
    "href": "docs/index.html",
    "title": "Documentation",
    "section": "",
    "text": "Under Construction 🏗️\n\n\n\nThis page of Bedrock’s website is still under construction.\n\n\n\nGetting Started\n\n\nTutorials\n\n\nFundamentals\n\n\nReference"
  },
  {
    "objectID": "articles.html",
    "href": "articles.html",
    "title": "Articles",
    "section": "",
    "text": "Data Dictionaries from AGS.pdf’s\n\n\n\n\n\n\npython\n\n\nags\n\n\nags3\n\n\nags4\n\n\n\nUsing ChatGPT and Python to extract AGS 3 and AGS 4 data dictionaries from their corresponding .pdf documentation.\n\n\n\n\n\nSep 26, 2024\n\n\nJoost Gevaert\n\n\n\n\n\n\n\n\n\n\n\n\nBedrock ❤️ Quarto\n\n\n\n\n\n\nquarto\n\n\n\nWhy I chose Quarto for building this website.\n\n\n\n\n\nAug 18, 2024\n\n\nJoost Gevaert\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome to Bedrock\n\n\n\n\n\n\nnews\n\n\n\nAn introduction to Bedrock and Bedrock’s website.\n\n\n\n\n\nAug 17, 2024\n\n\nJoost Gevaert\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "articles/2024-08-17-welcome/index.html",
    "href": "articles/2024-08-17-welcome/index.html",
    "title": "Welcome to Bedrock",
    "section": "",
    "text": "This is the first article on Bedrock’s website. Welcome!\n\n\n\n\n\n\nUnder Construction 🏗️\n\n\n\nThis page of Bedrock’s website is still under construction.\n\n\nBedrock is the open source foundation for ground investigation data, subsurface modelling and Geo-BIM.\nI studied a masters in applied geophysics and a masters in geotechnical engineering. While studying this I was always thinking that geophysics should be used more in geotechnical engineering, because in geotechnical engineering"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Under Construction 🏗️\n\n\n\nThis page of Bedrock’s website is still under construction. The content below comes from Quarto’s about page."
  },
  {
    "objectID": "about.html#goals",
    "href": "about.html#goals",
    "title": "About",
    "section": "Goals",
    "text": "Goals\nThe overarching goal of Quarto is to make the process of creating and collaborating on scientific and technical documents dramatically better. We hope to do this in several dimensions:\n\nCreate a writing and publishing environment with great integrated tools for technical content. We want to make authoring with embedded code, equations, figures, complex diagrams, interactive widgets, citations, cross references, and the myriad other special requirements of scientific discourse straightforward and productive for everyone.\nHelp authors take full advantage of the web as a connected, interactive platform for communications, while still providing the ability to create excellent printed output from the same document source. Researchers shouldn’t need to choose between LaTeX, MS Word, and HTML but rather be able to author documents that target all of them at the same time.\nMake reproducible research and publications the norm rather than the exception. Reproducibility requires that the code and data required to create a manuscript are an integrated part of it. However, this isn’t often straightforward in practice—Quarto aims to make it easier to adopt a reproducible workflow than not.\n\nQuarto is open source software. We believe that it’s better for everyone if the tools used for research and science are free and open. Reproducibility, widespread sharing of knowledge and techniques, and the leveling of the playing field by eliminating cost barriers are but a few of the shared benefits of free software in science."
  },
  {
    "objectID": "about.html#project",
    "href": "about.html#project",
    "title": "About",
    "section": "Project",
    "text": "Project\nAt the core of Quarto is Pandoc, a powerful and flexible document processing tool. Quarto adds a number of facilities to Pandoc aimed at scientific and technical publishing, including:\n\nEmbedding code and output from Python, R, and JavaScript via integration with Jupyter, Knitr, and Observable.\nA variety of extensions to Pandoc markdown useful for technical writing including cross-references, sub-figures, layout panels, hoverable citations and footnotes, callouts, and more.\nA project system for rendering groups of documents at once, sharing options across documents, and producing aggregate output like websites and books.\n\nDevelopment of Quarto is sponsored by Posit, PBC, where we previously created a similar system (R Markdown) that shared the same goals, but was targeted principally at users of the R language. The same core team works on both Quarto and R Markdown:\n\nJ.J. Allaire (@jjallaire)\nChristophe Dervieux (@cderv)\nCarlos Scheidegger (@cscheid)\nCharles Teague (@dragonstyle)\nYihui Xie (@yihui)\n\nWith Quarto, we are hoping to bring these tools to a much wider audience.\nQuarto is a registered trademark of Posit. Please see our trademark policy for guidelines on usage of the Quarto trademark."
  },
  {
    "objectID": "about.html#contribute",
    "href": "about.html#contribute",
    "title": "About",
    "section": "Contribute",
    "text": "Contribute\nYou can contribute to Quarto in many ways:\n\nBy opening issues to provide feedback and share ideas.\nBy submitting Pull Request (PR) to fix opened issues\nBy submitting Pull Request (PR) to suggest new features (it is considered good practice to open an issue for discussion before working on a pull request for a new feature).\n\nPlease be mindful of our code of conduct as you interact with other community members.\n\nPull Requests\nPull requests are very welcome! Here’s how to contribute via PR:\n\nFork the repository, clone it locally, and make your changes in a new branch specific to the PR. For example:\n\n\nTerminal\n\n# clone your fork\n$ git clone https://github.com/&lt;username&gt;/quarto-cli\n\n# configure for your platform (./configure.sh or ./configure.cmd for windows)\n$ cd quarto-cli\n$ ./configure.sh\n\n# checkout a new branch\n$ git checkout -b feature/newthing\n\nFor significant changes (e.g more than small bug fixes), ensure that you have signed the individual or corporate contributor agreement as appropriate. You can send the signed copy to jj@rstudio.com.\nSubmit the pull request. It is ok to submit as draft in your are still working on it but would like some feedback from us. It always good to share in the open that you are working on it.\n\nWe’ll try to be as responsive as possible in reviewing and accepting pull requests."
  },
  {
    "objectID": "articles/2024-08-18-bedrock-loves-quarto/index.html",
    "href": "articles/2024-08-18-bedrock-loves-quarto/index.html",
    "title": "Bedrock ❤️ Quarto",
    "section": "",
    "text": "Quarto makes it really easy to set up a smoothly working and beautiful website. It took me less than 3 days to set up Bedrock’s website with:\nQuarto makes it easy to implement many features that are essential for modern (docs) websites, see below 🤩. Building all these features from without handy tooling is, … daunting.\nOther tools I looked at:"
  },
  {
    "objectID": "articles/2024-08-18-bedrock-loves-quarto/index.html#quarto",
    "href": "articles/2024-08-18-bedrock-loves-quarto/index.html#quarto",
    "title": "Bedrock ❤️ Quarto",
    "section": "Quarto?",
    "text": "Quarto?\n\nNice intro, but … Quarto?\n\n\nWhat\nHow: pandoc\nWhy\nWho: Posix + Community\nWhen"
  },
  {
    "objectID": "articles/2024-08-18-bedrock-loves-quarto/index.html#markdown",
    "href": "articles/2024-08-18-bedrock-loves-quarto/index.html#markdown",
    "title": "Bedrock ❤️ Quarto",
    "section": "Markdown",
    "text": "Markdown\nMarkdown is an easy to read and write text format:\n\nIt’s plain text so works well with version control\nIt can be rendered into HTML (this website), PDF, Word (.docx), PowerPoint (.pptx) presentation and more…\nMany very useful basic features, see below.\nLearn more at: https://quarto.org/docs/authoring/\n\n\nEquations\nUse LaTeX to write equations: \\[\nx = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}\n\\tag{1}\\]\n\n\nSource Code\nSee Static Code, Computed Code & Interactive Docs below.\n\n\nLists\nQuarto’s docs list some pretty awesome lists that I wasn’t aware of, and creative ways of using them. My highlight, definitions:\n\nterm or symbol, e.g. \\(\\alpha\\)\n\ndefinition\n\n\n\n\nFootnotes\nFootnotes in a Quarto website get a hover preview 🤩1\n\n\n“Raw Content”\nA somewhat cryptic way of saying that you can use this to to say that this is how you can embed other websites . For example:\n```{=html}\n&lt;iframe title=\"Kai Tak - Speckle\" src=\"https://app.speckle.systems/projects/013aaf06e7/models/0fa0287ba8,a739490298,c59c767566#embed=%7B%22isEnabled%22%3Atrue%7D\" width=\"100%\" height=\"500\" frameborder=\"0\"&gt;&lt;/iframe&gt;\n```\nembeds ⬇️"
  },
  {
    "objectID": "articles/2024-08-18-bedrock-loves-quarto/index.html#static-code-computed-code-interactivity",
    "href": "articles/2024-08-18-bedrock-loves-quarto/index.html#static-code-computed-code-interactivity",
    "title": "Bedrock ❤️ Quarto",
    "section": "Static Code, Computed Code & Interactivity",
    "text": "Static Code, Computed Code & Interactivity\nA Quarto Website project produces HTML documents (see _site directory) as output from the Quarto (.qmd), Markdown (.md), or Jupyter Notebook (.ipynb) files, which are then put together into a website with all the features a modern (docs) site needs by Quarto. Code blocks in these HTML documents comes in 2 types:\n\nStatic Code. Static code is not executed by Quarto when the website is generated, and can therefore not produce output such as figures. Static code blocks can be generated like this:\n  ```{.python}\n  print(\"This is a static code block. The code in this block will not be executed.\")\n  ```\nResult 👇\n\nprint(\"This is a static code block. The code in this block will not be executed.\")\n\nComputed Code. Computed code is executed by Quarto when the website it generated, and can therefore produce output such as figures. These figures can also be made interactive when you use a library such as plotly. Computed code blocks can be generated like this:\n  ```{python}\n  print(\"This is a computed code block. The code block will be executed.\")\n  ```\nResult 👇\n\n\n\nCode\nprint(\"This is a computed code block. The code block will be executed.\")\n\n\nThis is a computed code block. The code block will be executed.\n\n\nAs you can see, this is a bit tricky, because the difference between a code block being static ({.python}) and computed ({python}) is only a single “.”.\nBelow a little more exciting example of a computed Python code block. Figure 1 actually comes from Quarto’s Get Started Guide.\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\n\n\n\n\nFigure 1: A line plot on a polar axis\n\n\n\n\n\n\nCode Annotations\nQuarto also has beatiful code annotations:\n{\n  \"location\": {\n    \"attributes\": {},\n1    \"geometry\": \"Point / 3D LineString\",\n    \"children\": {}\n  }\n}\n\n1\n\nThe geometry of a borehole location is best represented by a “3D LineString”. However, when visualizing the locations for which GI data is available on a 2D map, vertical lines vanish, in such cases using “Point” geometry for the GI location is better."
  },
  {
    "objectID": "articles/2024-08-18-bedrock-loves-quarto/index.html#awesome-features-for-modern-websites",
    "href": "articles/2024-08-18-bedrock-loves-quarto/index.html#awesome-features-for-modern-websites",
    "title": "Bedrock ❤️ Quarto",
    "section": "Awesome Features for Modern Websites",
    "text": "Awesome Features for Modern Websites\nSo, Markdown provides a great developer i.e. contributor experience, and the Code & Interactivity features make Quarto documentation useful and engaging, but that doesn’t give you a good website yet. Therefore, this section highlights some of the awesome Quarto features that are essential for modern (docs) websites.\n\nWebsite Navigation\n\nNavBar\n\nLogo. Lacks Quarto docs though, so see the Quarto config of this website _quarto.yml on GitHub.\nHelp ▼ menu\nGitHub & Socials\nWebsite Search\n\nRight Sidebar\n\nSee “On this Page”, and Table of Contents in the Quarto docs.\nPage specific GitHub Links\n\nLeft Sidebar\nRelevant for Bedrock’s Documentation, but not yet implemented. Look at Hybrid Navigation, meaning Sidebar Navigation for inside the Documentation part of the website only, while maintaining the NavBar.\n\n\n\n\n\n\n\nWarning 1: 🐞 No Search Placeholder\n\n\n\nWhen editing the search appearance when using a search textbox, the “Search” placeholder is not showing up in the website.\n\n\n\n\nCross-References with Hover Preview\nThe way that cross-referencing is implemented in Quarto is very slick as well:\n\nCallout Blocks, e.g. Warning 1\nFigures:, e.g. Figure 1\nEquations, e.g. Equation 1\nThe list above only highlights some of the basics of cross-referencing with Quarto. Learn more at: Options, Div Syntaz, Custom Floats"
  },
  {
    "objectID": "articles/2024-08-18-bedrock-loves-quarto/index.html#promising-features",
    "href": "articles/2024-08-18-bedrock-loves-quarto/index.html#promising-features",
    "title": "Bedrock ❤️ Quarto",
    "section": "Promising Features",
    "text": "Promising Features\nSeveral other Quarto features that I like and (might) want to make use of in the future:\n\nTabsets\nDark Mode\nDiagrams\nIn addition to Reference Popups, i.e. hover previews for footnotes and cross-references, Quarto also has reference popups for citations.\nLinks to Source Notebooks, such that you can open up a docs page that’s based on a Jupyter Notebook directly in Google Colab (see Notebook Embed # View Options & Reference &gt; Formats &gt; HTML Options # Links notebook-view).\nOpen Graph config for richer sharing of links to specific pages of websites.\nquartodoc is a Python package for generating API reference documentation of a Python package with proper docstrings that is based on, and integrates with Quarto.\nCommenting such that you all can leave your thoughts right here 👇"
  },
  {
    "objectID": "articles/2024-08-18-bedrock-loves-quarto/index.html#footnotes",
    "href": "articles/2024-08-18-bedrock-loves-quarto/index.html#footnotes",
    "title": "Bedrock ❤️ Quarto",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nHey, that tickles 🤣↩︎"
  },
  {
    "objectID": "articles/2024-09-26-extract-from-ags-pdf/index.html",
    "href": "articles/2024-09-26-extract-from-ags-pdf/index.html",
    "title": "Data Dictionaries from AGS.pdf’s",
    "section": "",
    "text": "&gt;&gt; upload the AGS3-3-1-2005.pdf\n\nPut the Groups and Headings table in a CSV with columns group_name,contents,notes,parent_group\nThe Groups and Headings table starts at the bottom of page 13 and finishes on page 17."
  },
  {
    "objectID": "community.html",
    "href": "community.html",
    "title": "Community",
    "section": "",
    "text": "Under Construction 🏗️\n\n\n\nThis page of Bedrock’s website is still under construction.\n\n\nThe community of Bedrock has its home in the SWUNG (Software Underground) community.\nHowever, because Bedrock also has a strong link with Speckle - to make it possible to use ground investigation easily in all the software that are commonly used in the AEC (Architecture, Engineering & Construction) industry - you may want to post your questions on the Speckle community forum."
  },
  {
    "objectID": "docs/Tutorials/ags3_to_gis_and_speckle.html",
    "href": "docs/Tutorials/ags3_to_gis_and_speckle.html",
    "title": "Bedrock",
    "section": "",
    "text": "Code\nimport bedrock.gi as brgi\nimport requests\n\n\n\n\nCode\ndata_root = \"https://github.com/bedrock-gi/bedrock-web/raw/main/public/gi-data/kaitak\"\nreport_number = 31241\nfile_name = \"GE9908.7.ags\"\ndata_url = f\"{data_root}/{str(report_number)}/{file_name}\"\n\nresponse = requests.get(data_url)\n\nif response.status_code == 200:\n    ags3_str = response.content.decode(\"utf-8\")\nelse:\n    print(f\"Failed to retrieve data: {response.status_code}\")\n\n\n\n\nCode\ndata_url\n\n\n'https://github.com/bedrock-gi/bedrock-web/raw/main/public/gi-data/kaitak/31241/GE9908.7.ags'\n\n\n\n\nCode\nags3_dfs = brgi.ags3_to_dfs(ags3_str)\n\n\nNo data was found on line 3. Last Group: PROJ\nNo data was found on line 43. Last Group: HOLE\nNo data was found on line 44. Last Group: HOLE\nNo data was found on line 45. Last Group: HOLE\nNo data was found on line 84. Last Group: PTIM\nNo data was found on line 125. Last Group: SAMP\nNo data was found on line 194. Last Group: GEOL\nNo data was found on line 195. Last Group: GEOL\nNo data was found on line 196. Last Group: GEOL\nNo data was found on line 197. Last Group: GEOL\nNo data was found on line 198. Last Group: GEOL\nNo data was found on line 199. Last Group: GEOL\n\n\n\n\nCode\nags3_dfs.keys()\n\n\ndict_keys(['PROJ', 'HOLE', 'PTIM', 'SAMP', 'GEOL'])\n\n\n\n\nCode\nags3_dfs[\"HOLE\"].columns\n\n\nIndex(['HOLE_ID', 'HOLE_TYPE', 'HOLE_NATE', 'HOLE_NATN', 'HOLE_GL',\n       'HOLE_FDEP', 'HOLE_STAR', 'HOLE_LOG', 'HOLE_REM', 'HOLE_LOCX',\n       'HOLE_LOCY', 'HOLE_LOCZ', 'HOLE_ENDD', 'HOLE_BACD', 'HOLE_CREW',\n       'HOLE_ORNT', 'HOLE_INCL', 'HOLE_EXC', 'HOLE_SHOR\",', 'HOLE_STAB',\n       'HOLE_DIMW', 'HOLE_DIML'],\n      dtype='object')\n\n\n\n\nCode\nags3_dfs[\"HOLE\"]\n\n\n\n\n\n\n\n\n\nHOLE_ID\nHOLE_TYPE\nHOLE_NATE\nHOLE_NATN\nHOLE_GL\nHOLE_FDEP\nHOLE_STAR\nHOLE_LOG\nHOLE_REM\nHOLE_LOCX\n...\nHOLE_ENDD\nHOLE_BACD\nHOLE_CREW\nHOLE_ORNT\nHOLE_INCL\nHOLE_EXC\nHOLE_SHOR\",\nHOLE_STAB\nHOLE_DIMW\nHOLE_DIML\n\n\n\n\n0\nAC1\nVC\n838804.86\n820146.79\n-4.40\n6.00\n16/06/2000\nMY LEE\n1. Sub-samples were taken at A) 0.10m to 1.10m...\n\n...\n16/06/2000\n16/06/2000\n\n000\n90\nG35\n\n\n\n\n\n\n1\nAC2(B)\nVC\n838924.24\n819940.24\n-2.00\n6.00\n17/06/2000\nMY LEE\n1. Sub-samples were taken at A) 0.00m to 1.00m...\n\n...\n17/06/2000\n17/06/2000\n\n000\n90\nG35\n\n\n\n\n\n\n2\nAC3\nVC\n839082.41\n819958.33\n-4.80\n6.00\n17/06/2000\nMY LEE\n1. Sub-samples were taken at A) 0.20m to 1.20m...\n\n...\n17/06/2000\n17/06/2000\n\n000\n90\nG35\n\n\n\n\n\n\n3\nAC4(A)\nVC\n839202.72\n819766.02\n-4.75\n6.00\n19/06/2000\nMY LEE\n1. Sub-samples were taken at A) 0.25m to 1.25m...\n\n...\n19/06/2000\n19/06/2000\n\n000\n90\nG35\n\n\n\n\n\n\n4\nAC5\nVC\n839315.26\n819565.15\n-3.20\n11.00\n16/06/2000\nMY LEE\n1. Sub-samples were taken at A) 0.00m to 0.75m...\n\n...\n16/06/2000\n16/06/2000\n\n000\n90\nDM2\n\n\n\n\n\n\n5\nAC6\nVC\n839478.85\n819577.05\n-6.10\n5.00\n17/06/2000\nMY LEE\n1. Sub-samples were taken at A) 0.25m to 0.85m...\n\n...\n17/06/2000\n17/06/2000\n\n000\n90\nDM2\n\n\n\n\n\n\n6\nAC7(B)\nVC\n839599.62\n819393.66\n-6.10\n5.00\n17/06/2000\nMY LEE\n1. Sub-samples were taken at A) 0.65m to 1.45m...\n\n...\n17/06/2000\n17/06/2000\n\n000\n90\nDM2\n\n\n\n\n\n\n7\nKB1\nVC\n837972.72\n818966.22\n-7.90\n6.00\n21/06/2000\nMY LEE\n1. Sub-samples were taken at A) 0.00m to 0.90m...\n\n...\n21/06/2000\n21/06/2000\n\n000\n90\nDM2\n\n\n\n\n\n\n8\nKB2(A)\nVC\n838048.56\n819357.17\n-6.80\n5.50\n21/06/2000\nMY LEE\n1. Sub-samples were taken at A) 0.00m to 0.74m...\n\n...\n21/06/2000\n21/06/2000\n\n000\n90\nDM2\n\n\n\n\n\n\n9\nKB3\nVC\n838045.89\n819656.72\n-6.70\n4.00\n21/06/2000\nMY LEE\n1. Sub-samples were taken at A) 0.05m to 0.51m...\n\n...\n21/06/2000\n21/06/2000\n\n000\n90\nDM2\n\n\n\n\n\n\n10\nKB4\nVC\n838450.29\n819374.58\n-7.10\n4.50\n22/06/2000\nMY LEE\n1. Sub-samples were taken at A) 0.10m to 0.63m...\n\n...\n22/06/2000\n22/06/2000\n\n000\n90\nDM2\n\n\n\n\n\n\n11\nKB5(A)\nVC\n838271.87\n819591.33\n-6.00\n6.00\n22/06/2000\nMY LEE\n1. Sub-samples were taken at A) 0.10m to 0.43m...\n\n...\n22/06/2000\n22/06/2000\n\n000\n90\nDM2\n\n\n\n\n\n\n12\nKB6(A)\nVC\n838350.72\n819973.01\n-1.90\n6.00\n20/06/2000\nMY LEE\n1. Sub-samples were taken at A) 0.10m to 0.70m...\n\n...\n20/06/2000\n20/06/2000\n\n000\n90\nDM2\n\n\n\n\n\n\n13\nKB7\nVC\n838659.40\n819678.09\n-4.20\n6.00\n20/06/2000\nMY LEE\n1. Sub-samples were taken at A) 0.00m to 0.55m...\n\n...\n20/06/2000\n20/06/2000\n\n000\n90\nDM2\n\n\n\n\n\n\n14\nKT1\nVC\n839914.66\n819393.56\n-5.75\n6.00\n19/06/2000\nMY LEE\n1. Sub-samples were taken at A) 0.30m to 0.60m...\n\n...\n19/06/2000\n19/06/2000\n\n000\n90\nDM2\n\n\n\n\n\n\n15\nKT2\nVC\n840073.08\n819241.19\n-5.60\n6.00\n19/06/2000\nMY LEE\n1. Sub-samples were taken at A) 0.35m to 0.92m...\n\n...\n19/06/2000\n19/06/2000\n\n000\n90\nDM2\n\n\n\n\n\n\n16\nKT3\nVC\n841064.83\n818296.58\n-10.20\n4.50\n20/06/2000\nMY LEE\n1. Sub-samples were taken at A) 0.10m to 1.10m...\n\n...\n20/06/2000\n20/06/2000\n\n000\n90\nDM2\n\n\n\n\n\n\n17\nKT4\nVC\n840912.49\n818138.16\n-8.00\n6.00\n19/06/2000\nMY LEE\n1. Sub-samples were taken at A) 0.00m to 1.00m...\n\n...\n19/06/2000\n19/06/2000\n\n000\n90\nDM2\n\n\n\n\n\n\n\n\n18 rows × 22 columns"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Bedrock",
    "section": "",
    "text": "Under Construction 🏗️\n\n\n\nThis page of Bedrock’s website is still under construction."
  },
  {
    "objectID": "index.html#what",
    "href": "index.html#what",
    "title": "Bedrock",
    "section": "What?",
    "text": "What?\n\nOpen source Python package for converting ground investigation data in e.g. AGS v3 or v4 format to 3D GIS vector data.\nDocumentation and tutorials on how to use this\n\n\nGI Data Model\n{\n  \"location\": {\n    \"attributes\": {},\n1    \"geometry\": \"Point / 3D LineString\",\n    \"children\": {\n      \"materialClassification\": {\n        \"attributes\": {},\n        \"geometry\": \"3D LineString\"\n      },\n      \"standardPenetrationTest\": {\n        \"attributes\": {},\n        \"geometry\": \"3D Point\"\n      },\n      \"rockQualityDesignation\": {\n        \"attributes\": {},\n        \"geometry\": \"3D LineString\"\n      },\n      \"otherInSituTests\": {\n        \"attributes\": {},\n        \"geometry\": \"3D Point or 3D LineString\"\n      },\n      \"sample\": {\n        \"attributes\": {},\n        \"geometry\": \"3D Point\",\n        \"children\": {\n          \"grainSizeDistribution\": {},\n          \"atterbergLimits\": {},\n          \"oedometerTest\": {},\n          \"triaxialTest\": {},\n          \"unconfinedCompressiveStrength\": {},\n          \"otherLabTests\": {}\n        }\n      }\n    }\n  }\n}\n\n1\n\nPoints are sometimes easier to visualize in GIS, e.g. in Matplotlib vertical 3D LineStrings vanish in a top view."
  },
  {
    "objectID": "index.html#why",
    "href": "index.html#why",
    "title": "Bedrock",
    "section": "Why?",
    "text": "Why?"
  },
  {
    "objectID": "index.html#how",
    "href": "index.html#how",
    "title": "Bedrock",
    "section": "How?",
    "text": "How?\n\nOpen Source\nCommunity"
  }
]